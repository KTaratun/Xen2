#: import FadeTransition kivy.uix.screenmanager.FadeTransition
#: import isfile os.path.isfile

ScreenManagement:
	id: sManager
	transition: FadeTransition()
	TitleScreen:
		id: title
		name: "title"
		manager: sManager
	CharacterSelectScreen:
		id: charSelect
		name: "charSelect"
		manager: sManager
	ClassSelectScreen:
		id: class
		name: "class"
		manager: sManager
	CardInfoScreen:
		id: cards
		name: "cards"
		manager: sManager
	CharacterStatsScreen:
		id: stats
		name: "stats"
		manager: sManager
	ElementSelectScreen:
		id: elements
		name: "elements"
		manager: sManager
	LoadoutScreen:
		id: loadout
		name: "loadout"
		manager: sManager
	ConfirmationScreen:
		id: confirm
		name: "confirm"
		manager: sManager
	CharacterScreen:
		id: character
		name: "character"
		manager: sManager
	BoosterScreen:
		id: booster
		name: "booster"
		manager: sManager
	
<Label>:
	pos_hint: {"center_x": .5, "center_y": .9}
	font_size: 40
	
<Button>:
	font_size: 20
	size_hint: 0.35, 0.15

<Screen>:
	canvas:
		Color:
			rgba: .8, .8, .8, 1
		Rectangle:
			pos: self.pos
			size: self.size
	Button:
		id: back
		text: "Back"
		size_hint: .15, .1
		pos_hint: {"center_x": .1, "center_y": .08}
		on_release: app.root.current = root.parent.backStack.pop()

<TitleScreen>:
	Label:
		text: "Xen2 Alpha"
	Button:
		on_release: 
			app.root.ids.character.ids.save.disabled = False
			root.parent.CharSelectUpdate()
			root.parent.nextscreen(last="title", next="charSelect")
		text: "Player"
		pos_hint: {"center_x": .5, "center_y": .62}
		size_hint: 0.5, 0.2
	Button:
		text: "Game Master"
		pos_hint: {"center_x": .5, "center_y": .32}
		size_hint: 0.5, 0.2
		on_release: 
			app.root.ids.character.ids.save.disabled = True
			app.root.RandoEnemyPopup()
		
<CharacterSelectScreen>
	Label:
		text: "Character Select"
	Button:
		id: one
		pos_hint: {"center_x": .25, "center_y": .7}
		on_release: 
			root.parent.path = open("char1.txt", "w") if self.text == "NEW CHAR" else open("char1.txt", "r")
			app.root.delete = "char1.txt"
			app.root.colorUpdate(root, self, app.root.character)
			if self.text == "NEW CHAR": delete.disabled = True
			else: delete.disabled = False
	Button:
		id: three
		pos_hint: {"center_x": .25, "center_y": .5}
		on_release: 
			root.parent.path = open("char3.txt", "w") if self.text == "NEW CHAR" else open("char3.txt", "r")
			app.root.delete = "char3.txt"
			app.root.colorUpdate(root, self, app.root.character)
			if self.text == "NEW CHAR": delete.disabled = True
			else: delete.disabled = False
	Button:
		id: five
		pos_hint: {"center_x": .25, "center_y": .3}
		on_release: 
			root.parent.path = open("char5.txt", "w") if self.text == "NEW CHAR" else open("char5.txt", "r")
			app.root.delete = "char5.txt"
			app.root.colorUpdate(root, self, app.root.character)
			if self.text == "NEW CHAR": delete.disabled = True
			else: delete.disabled = False
	Button:
		id: two
		pos_hint: {"center_x": .75, "center_y": .7}
		on_release: 
			root.parent.path = open("char2.txt", "w") if self.text == "NEW CHAR" else open("char2.txt", "r")
			app.root.delete = "char2.txt"
			app.root.colorUpdate(root, self, app.root.character)
			if self.text == "NEW CHAR": delete.disabled = True
			else: delete.disabled = False
	Button:
		id: four
		pos_hint: {"center_x": .75, "center_y": .5}
		on_release: 
			root.parent.path = open("char4.txt", "w") if self.text == "NEW CHAR" else open("char4.txt", "r")
			app.root.delete = "char4.txt"
			app.root.colorUpdate(root, self, app.root.character)
			if self.text == "NEW CHAR": delete.disabled = True
			else: delete.disabled = False
	Button:
		id: six
		pos_hint: {"center_x": .75, "center_y": .3}
		on_release: 
			root.parent.path = open("char6.txt", "w") if self.text == "NEW CHAR" else open("char6.txt", "r")
			app.root.delete = "char6.txt"
			app.root.colorUpdate(root, self, app.root.character)
			if self.text == "NEW CHAR": delete.disabled = True
			else: delete.disabled = False
	Button:
		id: delete
		text: "Delete"
		size_hint: .15, .1
		pos_hint: {"center_x": .5, "center_y": .08}
		disabled: True
		on_release:
			app.root.DeletePopup()
	Button:
		id: next
		text: "Select"
		size_hint: .15, .1
		pos_hint: {"center_x": .9, "center_y": .08}
		disabled: True
		on_release:
			root.parent.backStack.append(root.name)
			app.root.current = "class" if app.root.character.Class == "NEW CHAR" else app.root.CharInit(app.root.character)
			if app.root.character.Class == "NEW CHAR": app.root.character = app.root.Character()
			next.disabled = True
			delete.disabled = True
			app.root.colorUpdate(root, self, app.root.character)
			
<ClassSelectScreen>:
	Label:
		text: "Character Creation: Class"
	Label:
		id: desc
		font_size: 24
		pos_hint: {"left": 1, "center_y": .335}
	Button:
		id: one
		name: "Scout"
		text: "Scout"
		pos_hint: {"center_x": .2, "center_y": .7}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.deckStuff(screen=app.root.ids.cards, starter=True)
			root.ids.desc.text = "Scout characters favor Speed, Board Control and Non-Leathal\nCombat. Their Speed allows them to receive action bonues to\nensure success in combat. They can manipulate players\npositions on the battlefield for greater strategy. Scouts can\nknock players out by removing cards from their decks."
	Button:
		id: two
		name: "Technician"
		text: "Technician"
		pos_hint: {"center_x": .5, "center_y": .7}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.deckStuff(screen=app.root.ids.cards, starter=True)
			root.ids.desc.text = "Technicians are proficient with Items, Weapons and Tech\nactions. They can create a variety of items on the spot and\nuse them more effectively. Their prowess with weapons\nallows them to push their weapons to the limits. Technicians\nTech abilities grant them the power to alter the stats of players."
	Button:
		id: three
		name: "Assault"
		text: "Assault"
		pos_hint: {"center_x": .8, "center_y": .7}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.deckStuff(screen=app.root.ids.cards, starter=True)
			root.ids.desc.text = "Assault characters slay opponents with disabling effects,\npriority and raw power. Their power can be focused to target\ntheir opponents weak spots. Their attacks have increased\npriority which can grant bonuses in battle. They can down\nenemies faster than other classes with large damage buffs. "
	Button:
		id: four
		name: "Guard"
		text: "Guard"
		pos_hint: {"center_x": .2, "center_y": .55}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.deckStuff(screen=app.root.ids.cards, starter=True)
			root.ids.desc.text = "Guards have the most defense, life gain and prevent abilities\nfrom triggering. They can carry the most armor and repair\nit when it starts breaking. They can heal fallen allies, amplify\nhealing abilities and leach life from opponents. They can\nalso cancel abilities and remove status effects from players. "
	Button:
		id: five
		name: "PSI"
		text: "PSI"
		pos_hint: {"center_x": .5, "center_y": .55}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.deckStuff(screen=app.root.ids.cards, starter=True)
			root.ids.desc.text = "PSI characters have greater control over artificial magic. They\ncan create additional elements, charge them faster and\nalter currently charged elements in various ways. By sacrificing\naddtional elements, they can boost the effects of their charges. "
	Button:
		id: six
		name: "Arbiter"
		text: "Arbiter"
		pos_hint: {"center_x": .8, "center_y": .55}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.deckStuff(screen=app.root.ids.cards, starter=True)
			root.ids.desc.text = "Arbiters dictate the flow of battle through speech. They\nreceive major bonuses while negotiating and can affect\nmultiple targets. Their greater intellect allows them to draw\ncards and force opponents to discard. They can trick\nopponents into moving and attack specific targets. "
	Button:		
		id: cardList
		text: "Deck Info"
		pos_hint: {"center_x": .5, "center_y": .08}
		size_hint: 0.25, .1
		disabled: True
		on_release:
			app.root.num = 0
			root.parent.nextscreen(last="class", next="cards")
	Button:
		id: next
		text: "Next"
		size_hint: .15, .1
		pos_hint: {"center_x": .9, "center_y": .08}
		disabled: True
		on_release:
			root.parent.nextscreen(last="class", next="stats")
			
<CardInfoScreen>
	Label: 
		pos_hint: {"center_x": .5, "center_y": .95}
		text: "Character Creation: Deck"
	Button:
		id: help
		name: "help"
		text: "?"
		size_hint: .04, .06
		pos_hint: {"x": .9, "y": .9}
		on_release:
			app.root.Info("CARDS")
	FloatLayout:
		id: fL
		size_hint: (.46, .05)
		
<CharacterStatsScreen>
	Label:
		text: "Character Creation: Stats"
	Label:
		text: "Instinct"
		pos_hint: {"x": .2, "y": .7}
		text_size: self.size
	Label:
		text: "Movement:"
		pos_hint: {"x": .43, "y": .7}
		text_size: self.size
	Label:
		text: "Tech"
		pos_hint: {"x": .2, "y": .6}
		text_size: self.size
	Label:
		text: "Range:"
		pos_hint: {"x": .43, "y": .6}
		text_size: self.size
	Label:
		text: "Force"
		pos_hint: {"x": .2, "y": .5}
		text_size: self.size
	Label:
		text: "Damage:"
		pos_hint: {"x": .43, "y": .5}
		text_size: self.size
	Label:
		text: "Vitality"
		pos_hint: {"x": .2, "y": .4}
		text_size: self.size
	Label:
		text: "Inv:"
		pos_hint: {"x": .43, "y": .4}
		text_size: self.size
	Label: 
		text: "HP:"
		pos_hint: {"x": .61, "y": .398}
		text_size: self.size
	Label:
		text: "Psyche"
		pos_hint: {"x": .2, "y": .3}
		text_size: self.size
	Label:
		text: "Mastery:"
		pos_hint: {"x": .43, "y": .3}
		text_size: self.size
	Label:
		text: "Mind"
		pos_hint: {"x": .2, "y": .2}
		text_size: self.size
	Label:
		text: "Intellect:"
		pos_hint: {"x": .43, "y": .2}
		text_size: self.size
	Button:
		id: InsMINUS
		text: "-"
		pos_hint: {"x": .1, "y": .715}
		size_hint: .04, .06
		font_size: 30
		on_release:
			app.root.character.Instinct = app.root.dec(stat=app.root.character.Instinct, lab=InsVal, screen=root, character=app.root.character)
	Button:
		name: "TecMINUS"
		text: "-"
		pos_hint: {"x": .1, "y": .615}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Tech = app.root.dec(stat=app.root.character.Tech, lab=TecVal, screen=root, character=app.root.character)
	Button:
		name: "ForMINUS"
		text: "-"
		pos_hint: {"x": .1, "y": .515}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Force = app.root.dec(stat=app.root.character.Force, lab=ForVal, screen=root, character=app.root.character)
	Button:
		name: "VitMINUS"
		text: "-"
		pos_hint: {"x": .1, "y": .415}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Vitality = app.root.dec(stat=app.root.character.Vitality, lab=VitVal, screen=root, character=app.root.character)
	Button:
		name: "PsyMINUS"
		text: "-"
		pos_hint: {"x": .1, "y": .315}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Psyche = app.root.dec(stat=app.root.character.Psyche, lab=PsyVal, screen=root, character=app.root.character)
	Button:
		name: "MinMINUS"
		text: "-"
		pos_hint: {"x": .1, "y": .215}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Mind = app.root.dec(stat=app.root.character.Mind, lab=MinVal, screen=root, character=app.root.character)
	Button:
		name: "InsPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .715}
		size_hint: .04, .06
		font_size: 30
		on_release:
			app.root.character.Instinct = app.root.inc(stat=app.root.character.Instinct, lab=InsVal, total=app.root.character.Total, screen=root, character=app.root.character)
	Button:
		name: "TecPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .615}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Tech = app.root.inc(stat=app.root.character.Tech, lab=TecVal, total=app.root.character.Total, screen=root, character=app.root.character)
	Button:
		name: "ForPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .515}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Force = app.root.inc(stat=app.root.character.Force, lab=ForVal, total=app.root.character.Total, screen=root, character=app.root.character)
	Button:
		name: "VitPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .415}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Vitality = app.root.inc(stat=app.root.character.Vitality, lab=VitVal, total=app.root.character.Total, screen=root, character=app.root.character)
	Button:
		name: "PsyPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .315}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Psyche = app.root.inc(stat=app.root.character.Psyche, lab=PsyVal, total=app.root.character.Total, screen=root, character=app.root.character)
	Button:
		name: "MinPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .215}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Mind = app.root.inc(stat=app.root.character.Mind, lab=MinVal, total=app.root.character.Total, screen=root, character=app.root.character)
	Label:
		name: "Ins"
		id: InsVal
		text: "0"
		pos_hint: {"x": .04, "y": .7}
		font_size: 45
		text_size: self.size
	Label:
		id: MovVal
		text: "3"
		pos_hint: {"x": .69, "y": .69}
		font_size: 45
		text_size: self.size
	Label:
		name: "Tec"
		id: TecVal
		text: "0"
		pos_hint: {"x": .04, "y": .6}
		font_size: 45
		text_size: self.size
	Label:
		id: RanVal
		text: "3"
		pos_hint: {"x": .6, "y": .59}
		font_size: 45
		text_size: self.size
	Label:
		name: "For"
		id: ForVal
		text: "0"
		pos_hint: {"x": .04, "y": .5}
		font_size: 45
		text_size: self.size
	Label:
		id: DamVal
		text: "0"
		pos_hint: {"x": .64, "y": .49}
		font_size: 45
		text_size: self.size
	Label:
		name: "Vit"
		id: VitVal
		text: "0"
		pos_hint: {"x": .04, "y": .4}
		font_size: 45
		text_size: self.size
	Label:
		id: InvVal
		text: "6"
		pos_hint: {"x": .52, "y": .39}
		font_size: 45
		text_size: self.size
	Label:
		id: HPVal
		text: "10"
		pos_hint: {"x": .7, "y": .39}
		font_size: 45
		text_size: self.size
	Label
		name: "Psy"
		id: PsyVal
		text: "0"
		pos_hint: {"x": .04, "y": .3}
		font_size: 45
		text_size: self.size
	Label:
		id: MasVal
		text: "1"
		pos_hint: {"x": .63, "y": .29}
		font_size: 45
		text_size: self.size
	Label:
		name: "Min"
		id: MinVal
		text: "0"
		pos_hint: {"x": .04, "y": .2}
		font_size: 45
		text_size: self.size
	Label:
		id: IntVal
		text: "3"
		pos_hint: {"x": .63, "y": .19}
		font_size: 45
		text_size: self.size
	Label:
		id: TotVal
		text: "12"
		pos_hint: {"center_x": .55, "center_y": .075}
		font_size: 45
	Label:
		id: Tot
		text: "Total: "
		pos_hint: {"center_x": .45, "center_y": .075}
		font_size: 45
	Button:
		id: InsHelp
		text: "?"
		size_hint: .04, .06
		pos_hint: {"x": .84, "y": .705}
		on_release:
			app.root.Info("INS")
	Button:
		id: TecHelp
		text: "?"
		size_hint: .04, .06
		pos_hint: {"x": .84, "y": .605}
		on_release:
			app.root.Info("TEC")
	Button:
		id: ForHelp
		text: "?"
		size_hint: .04, .06
		pos_hint: {"x": .84, "y": .505}
		on_release:
			app.root.Info("FOR")
	Button:
		id: MinHelp
		text: "?"
		size_hint: .04, .06
		pos_hint: {"x": .84, "y": .405}
		on_release:
			app.root.Info("VIT")
	Button:
		id: VoiHelp
		text: "?"
		size_hint: .04, .06
		pos_hint: {"x": .84, "y": .305}
		on_release:
			app.root.Info("PSY")
	Button:
		id: LiqHelp
		text: "?"
		size_hint: .04, .06
		pos_hint: {"x": .84, "y": .205}
		on_release:
			app.root.Info("MIN")
	Button:
		id: next
		text: "Next"
		size_hint: .15, .1
		pos_hint: {"center_x": .9, "center_y": .08}
		disabled: True
		on_release:
			app.root.ElementPage(app.root.ids.elements, app.root.character)
			app.root.nextscreen(last="stats", next="elements")
		
<ElementSelectScreen>
	Label:
		text: "Charcter Creation: Elements"
	Label:
		text: "Zephyr"
		pos_hint: {"x": .2, "y": .7}
		font_size: 45
		text_size: self.size
	Label:
		id: zepMod
		text: "x"
		pos_hint: {"x": .42, "y": .7}
		font_size: 45
		text_size: self.size
	Label:
		text: "Spark"
		pos_hint: {"x": .2, "y": .6}
		font_size: 45
		text_size: self.size
	Label:
		id: spaMod
		text: "x"
		pos_hint: {"x": .42, "y": .6}
		font_size: 45
		text_size: self.size
	Label:
		text: "Heat"
		pos_hint: {"x": .2, "y": .5}
		font_size: 45
		text_size: self.size
	Label:
		id: heaMod
		text: "x"
		pos_hint: {"x": .42, "y": .5}
		font_size: 45
		text_size: self.size
	Label:
		text: "Mineral"
		pos_hint: {"x": .2, "y": .4}
		font_size: 45
		text_size: self.size
	Label:
		id: minMod
		text: "x"
		pos_hint: {"x": .42, "y": .4}
		font_size: 45
		text_size: self.size
	Label:
		text: "Void"
		pos_hint: {"x": .2, "y": .3}
		font_size: 45
		text_size: self.size
	Label:
		id: voiMod
		text: "x"
		pos_hint: {"x": .42, "y": .3}
		font_size: 45
		text_size: self.size
	Label:
		text: "Liquid"
		pos_hint: {"x": .2, "y": .2}
		font_size: 45
		text_size: self.size
	Label:
		id: liqMod
		text: "x"
		pos_hint: {"x": .42, "y": .2}
		font_size: 45
		text_size: self.size
	Button:
		id: ZepMINUS
		text: "-"
		pos_hint: {"x": .1, "y": .715}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Zephyr = app.root.decEle(stat=app.root.character.Zephyr, label=root.ids.ZepVal, screen=root, character=app.root.character)
	Button:
		name: "SpaMINUS"
		text: "-"
		pos_hint: {"x": .1, "y": .615}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Spark = app.root.decEle(stat=app.root.character.Spark, label=root.ids.SpaVal, screen=root, character=app.root.character)
	Button:
		name: "HeaMINUS"
		text: "-"
		pos_hint: {"x": .1, "y": .515}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Heat = app.root.decEle(stat=app.root.character.Heat, label=root.ids.HeaVal, screen=root, character=app.root.character)
	Button:
		name: "MinMINUS"
		text: "-"
		pos_hint: {"x": .1, "y": .415}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Mineral = app.root.decEle(stat=app.root.character.Mineral, label=root.ids.MinVal, screen=root, character=app.root.character)
	Button:
		name: "VoiMINUS"
		text: "-"
		pos_hint: {"x": .1, "y": .315}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Void = app.root.decEle(stat=app.root.character.Void, label=root.ids.VoiVal, screen=root, character=app.root.character)
	Button:
		name: "LiqMINUS"
		text: "-"
		pos_hint: {"x": .1, "y": .215}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Liquid = app.root.decEle(stat=app.root.character.Liquid, label=root.ids.LiqVal, screen=root, character=app.root.character)
	Button:
		name: "ZepPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .715}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Zephyr = app.root.incEle(stat=app.root.character.Zephyr, label=ZepVal, screen=root, character=app.root.character)
	Button:
		name: "SpaPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .615}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Spark = app.root.incEle(stat=app.root.character.Spark, label=SpaVal, screen=root, character=app.root.character)
	Button:
		name: "HeaPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .515}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Heat = app.root.incEle(stat=app.root.character.Heat, label=HeaVal, screen=root, character=app.root.character)
	Button:
		name: "MinPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .415}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Mineral = app.root.incEle(stat=app.root.character.Mineral, label=MinVal, screen=root, character=app.root.character)
	Button:
		name: "VoiPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .315}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Void = app.root.incEle(stat=app.root.character.Void, label=VoiVal, screen=root, character=app.root.character)
	Button:
		name: "LiqPlus"
		text: "+"
		pos_hint: {"x": .15, "y": .215}
		size_hint: .04, .06
		font_size: 30
		on_release: 
			app.root.character.Liquid = app.root.incEle(stat=app.root.character.Liquid, label=LiqVal, screen=root, character=app.root.character)
	Button:
		text: "Roll"
		pos_hint: {"x": .62, "y": .6}
		size_hint: .2, .1
		font_size: 45
		on_release: 
			app.root.BloodTypeGenerator(screen=root, character=app.root.character)
	Button:
		text: "Elements"
		pos_hint: {"x": .62, "y": .3}
		size_hint: .2, .1
		font_size: 35
		on_release: 
			app.root.ElementList(0)
	Label:
		id: bT
		text: "none"
		pos_hint: {"x": .62, "y": .5}
		size_hint: .2, .1
		font_size: 45
			
	Label:
		id: ZepVal
		text: "0"
		color: 1, 0, 0, 1
		pos_hint: {"x": .04, "y": .7}
		text_size: self.size
	Label:
		id: SpaVal
		text: "0"
		color: 1, 0, 0, 1
		pos_hint: {"x": .04, "y": .6}
		text_size: self.size
	Label:
		id: HeaVal
		text: "0"
		color: 1, 0, 0, 1
		pos_hint: {"x": .04, "y": .5}
		text_size: self.size
	Label:
		id: MinVal
		text: "0"
		color: 1, 0, 0, 1
		pos_hint: {"x": .04, "y": .4}
		text_size: self.size
	Label:
		id: VoiVal
		text: "0"
		color: 1, 0, 0, 1
		pos_hint: {"x": .04, "y": .3}
		text_size: self.size
	Label:
		id: LiqVal
		text: "0"
		color: 1, 0, 0, 1
		pos_hint: {"x": .04, "y": .2}
		text_size: self.size
	Label:
		id: ElTotVal
		text: "2"
		pos_hint: {"center_x": .39, "center_y": .075}
	Label:
		id: ElTotal
		text: "Total:"
		pos_hint: {"center_x": .3, "center_y": .075}
	Label:
		id: MasTot
		text: "1"
		color: 1, 0, 0, 1
		pos_hint: {"center_x": .75, "center_y": .075}
	Label:
		id: MasTotal
		text: "Mastery:"
		color: 1, 0, 0, 1
		pos_hint: {"center_x": .63, "center_y": .075}
	Button:
		id: help
		name: "help"
		text: "?"
		size_hint: .04, .06
		pos_hint: {"x": .9, "y": .9}
		on_release:
			app.root.Info("ELEMENTS")
	Button:
		id: next
		text: "Next"
		size_hint: .15, .1
		pos_hint: {"center_x": .9, "center_y": .08}
		disabled: True
		on_release:
			root.parent.nextscreen(last="elements", next="loadout")
			
<LoadoutScreen>
	Label:
		text: "Character Creation: Loadout"
	Button:
		id: one
		text: "Safety First"
		pos_hint: {"center_x": .2, "center_y": .7}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.LoadoutRandomizer("sF", app.root.character)
	Button:
		id: two
		text: "Tooth and Nail"
		pos_hint: {"center_x": .5, "center_y": .7}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.LoadoutRandomizer("tN", app.root.character)
	Button:
		id: three
		text: "Lock and Load"
		pos_hint: {"center_x": .8, "center_y": .7}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.LoadoutRandomizer("lL", app.root.character)
	Button:
		id: four
		text: "Chemist"
		pos_hint: {"center_x": .2, "center_y": .55}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.LoadoutRandomizer("c", app.root.character)
	Button:
		id: five
		text: "Trader"
		pos_hint: {"center_x": .5, "center_y": .55}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.LoadoutRandomizer("t", app.root.character)
	Button:
		id: six
		text: "Finders Keepers"
		pos_hint: {"center_x": .8, "center_y": .55}
		size_hint: 0.25, .1
		on_release: 
			app.root.colorUpdate(screen=root, curr=self, character=app.root.character)
			app.root.LoadoutRandomizer("fK", app.root.character)
	Button:
		id: cellOne
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .05, "center_y": .38}
	Button:
		id: cellTwo
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .2, "center_y": .38}
	Button:
		id: cellThree
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .35, "center_y": .38}
	Button:
		id: cellFour
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .5, "center_y": .38}
	Button:
		id: cellFive
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .65, "center_y": .38}
	Button:
		id: cellSix
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .8, "center_y": .38}
	Button:
		id: cellSeven
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .05, "center_y": .26}
	Button:
		id: cellEight
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .2, "center_y": .26}
	Button:
		id: cellNine
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .35, "center_y": .26}
	Button:
		id: cellTen
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .5, "center_y": .26}
	Button:
		id: cellEleven
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .65, "center_y": .26}
	Button:
		id: cellTwelve
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .8, "center_y": .26}
	Button:
		id: next
		text: "Next"
		size_hint: .15, .1
		pos_hint: {"center_x": .9, "center_y": .08}
		disabled: True
		on_release:
			app.root.CharScreenUpdate(app.root.ids.confirm, app.root.character)
			app.root.DeckAndGearInit(app.root.ids.confirm, app.root.character)
			root.parent.nextscreen(last="loadout", next="confirm")
			
<ConfirmationScreen>
	Label:
		id: name
		text: "Name: "
		font_size: 25
		pos_hint: {"x": 0, "y": .95}
		text_size: self.size
	Label:
		id: nameVal
		font_size: 25
		pos_hint: {"x": .1, "y": .95}
		text_size: self.size
	Label:
		id: lvl
		text: "Level: "
		font_size: 25
		pos_hint: {"x": 0, "y": .9}
		text_size: self.size
	Label:
		id: lvlVal
		font_size: 25
		pos_hint: {"x": .09, "y": .9}
		text_size: self.size
	Label:
		id: health
		text: "Health: "
		font_size: 25
		pos_hint: {"x": .38, "y": .95}
		text_size: self.size
	Label:
		id: HPVal
		color: 0, 0, 0, 1
		font_size: 25
		pos_hint: {"x": .485, "y": .95}
		text_size: self.size
	Label:
		id: lArmor
		text: "L Armor: "
		font_size: 25
		pos_hint: {"x": .38, "y": .9}
		text_size: self.size
	Label:
		id: lArmVal
		font_size: 25
		pos_hint: {"x": .505, "y": .9}
		text_size: self.size
	Label:
		id: hArmor
		text: "H Armor: "
		font_size: 25
		pos_hint: {"x": .38, "y": .85}
		text_size: self.size
	Label:
		id: hArmVal
		font_size: 25
		pos_hint: {"x": .51, "y": .85}
		text_size: self.size
	Image:
		id: cS
		source: "CharStats.png"
		size_hint: .7, .7
	Label:
		id: inventory
		text: "INV: "
		font_size: 25
		pos_hint: {"x": 0, "y": .85}
		text_size: self.size
	Label:
		id: invVal
		font_size: 25
		pos_hint: {"x": .07, "y": .85}
		text_size: self.size
	Label:
		id: blood
		text: "BLLLAAAD"
		color: 0, 0, 0, 1
		font_size: 25
		pos_hint: {"x": .24, "y": .57}
		text_size: self.size
	Label:
		id: zepBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .1443, "y": .693}
		text_size: self.size
	Label:
		id: spaBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .248, "y": .771}
		text_size: self.size
	Label:
		id: heaBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .3512, "y": .693}
		text_size: self.size
	Label:
		id: minBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .3512, "y": .535}
		text_size: self.size
	Label:
		id: psyBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .248, "y": .456}
		text_size: self.size
	Label:
		id: liqBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .1443, "y": .535}
		text_size: self.size
	Button:
		id: Ins
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: MovVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: Zep
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: Tec
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: RanVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: Spa
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: For
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: DamVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: Hea
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: Vit
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: InvVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.04, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: Mine
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: Psy
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: MasVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: Voi
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: Mind
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: IntVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: Liq
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
	Button:
		id: insInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("INS")
	Button:
		id: tecInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("TEC")
	Button:
		id: forInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("FOR")
	Button:
		id: vitInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("VIT")
	Button:
		id: psyInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("PSY")
	Button:
		id: minInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("MIN")
	Button:
		id: elements
		text: "Elements"
		size_hint: .15, .1
		pos_hint: {"center_x": .42, "center_y": .08}
		on_release: 
			app.root.ElementList(0)
	Button:
		id: negotiations
		text: "Negotiations"
		size_hint: .15, .1
		pos_hint: {"center_x": .26, "center_y": .08}
		on_release: 
			app.root.Info("NEG")
	Button:
		id: deck
		text: "Deck"
		size_hint: .15, .1
		pos_hint: {"center_x": .58, "center_y": .08}
		on_release: 
			app.root.num = 0
			app.root.deckStuff(cards=app.root.ids.cards)
	Button:
		id: name
		text: "Name"
		size_hint: .15, .1
		pos_hint: {"center_x": .74, "center_y": .08}
		on_release:
			root.parent.NamePopup(app.root.character)
	Button:
		id: fin
		text: "Finish"
		size_hint: .15, .1
		pos_hint: {"center_x": .9, "center_y": .08}
		disabled: True
		on_release:
			root.parent.SaveData(app.root.character)
			app.root.CharSelectUpdate()
			app.root.nextscreen(last="title", next="charSelect")
	Button:
		id: cellOne
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .55, "center_y": .95}
	Button:
		id: cellTwo
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .7, "center_y": .95}
	Button:
		id: cellThree
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .85, "center_y": .95}
	Button:
		id: cellFour
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .55, "center_y": .85}
	Button:
		id: cellFive
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .7, "center_y": .85}
	Button:
		id: cellSix
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .85, "center_y": .85}
	Button:
		id: cellSeven
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .55, "center_y": .75}
	Button:
		id: cellEight
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .7, "center_y": .75}
	Button:
		id: cellNine
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .85, "center_y": .75}
	Button:
		id: cellTen
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .55, "center_y": .65}
	Button:
		id: cellEleven
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .7, "center_y": .65}
	Button:
		id: cellTwelve
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .85, "center_y": .65}
			
<CharacterScreen>
	Label:
		id: name
		text: "Name: "
		font_size: 25
		pos_hint: {"x": 0, "y": .95}
		text_size: self.size
	Label:
		id: nameVal
		font_size: 25
		pos_hint: {"x": .1, "y": .95}
		text_size: self.size
	Label:
		id: lvl
		text: "Level: "
		font_size: 25
		pos_hint: {"x": 0, "y": .9}
		text_size: self.size
	Button:
		id: lvlVal
		font_size: 25
		pos_hint: {"x": .09, "y": .9}
		size_hint: (.08, .05)
		color: 1, 1, 1, 1
		background_color: (0, 0, 0, 0)
		text_size: self.size
		on_release:
			app.root.LevelUpPopup()
	Label:
		id: health
		text: "Health: "
		font_size: 25
		pos_hint: {"x": .38, "y": .95}
		text_size: self.size
	Button:
		id: HPVal
		color: 0, 0, 0, 1
		font_size: 25
		pos_hint: {"x": .49, "y": .95}
		size_hint: (.035, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempHealth = app.root.ChangeVal(button=self, orig=app.root.character.health, temp=app.root.character.tempHealth)
	Label:
		id: lArmor
		text: "L Armor: "
		font_size: 25
		pos_hint: {"x": .38, "y": .9}
		text_size: self.size
	Label:
		id: lArmVal
		font_size: 25
		pos_hint: {"x": .505, "y": .9}
		text_size: self.size
	Label:
		id: hArmor
		text: "H Armor: "
		font_size: 25
		pos_hint: {"x": .38, "y": .85}
		text_size: self.size
	Label:
		id: hArmVal
		font_size: 25
		pos_hint: {"x": .51, "y": .85}
		text_size: self.size
	Label:
		id: inventory
		text: "INV: "
		font_size: 25
		pos_hint: {"x": 0, "y": .85}
		text_size: self.size
	Label:
		id: invVal
		font_size: 25
		pos_hint: {"x": .07, "y": .85}
		text_size: self.size
	Image:
		id: cS
		source: "CharStats.png"
		size_hint: .7, .7
	Label:
		id: blood
		color: 0, 0, 0, 1
		font_size: 25
		pos_hint: {"x": .24, "y": .57}
		text_size: self.size
	Label:
		id: zepBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .1443, "y": .693}
		text_size: self.size
	Label:
		id: spaBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .248, "y": .771}
		text_size: self.size
	Label:
		id: heaBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .3512, "y": .693}
		text_size: self.size
	Label:
		id: minBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .3512, "y": .535}
		text_size: self.size
	Label:
		id: psyBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .248, "y": .456}
		text_size: self.size
	Label:
		id: liqBlood
		color: 0, 0, 0, 1
		font_size: 40
		pos_hint: {"x": .1443, "y": .535}
		text_size: self.size
	Button:
		id: Ins
		name: "Ins"
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempInstinct = app.root.ChangeVal(button=Ins, orig=app.root.character.Instinct, temp=app.root.character.tempInstinct)
	Button:
		id: MovVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempMovement = app.root.ChangeVal(button=self, orig=app.root.character.Movement, temp=app.root.character.tempMovement)
	Button:
		id: Zep
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempZephyr = app.root.ChangeVal(button=Zep, orig=app.root.character.Zephyr, temp=app.root.character.tempZephyr)
	Button:
		id: Tec
		name: "Tec"
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempTech = app.root.ChangeVal(button=Tec, orig=app.root.character.Tech, temp=app.root.character.tempTech)
	Button:
		id: RanVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempRange = app.root.ChangeVal(button=self, orig=app.root.character.Range, temp=app.root.character.tempRange)
	Button:
		id: Spa
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempSpark = app.root.ChangeVal(button=Spa, orig=app.root.character.Spark, temp=app.root.character.tempSpark)
	Button:
		id: For
		name: "For"
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempForce = app.root.ChangeVal(button=For, orig=app.root.character.Force, temp=app.root.character.tempForce)
	Button:
		id: DamVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempBrutality = app.root.ChangeVal(button=self, orig=app.root.character.Brutality, temp=app.root.character.tempBrutality)
	Button:
		id: Hea
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempHeat = app.root.ChangeVal(button=Hea, orig=app.root.character.Heat, temp=app.root.character.tempHeat)
	Button:
		id: Vit
		name: "Vit"
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempVitality = app.root.ChangeVal(button=Vit, orig=app.root.character.Vitality, temp=app.root.character.tempVitality)
	Button:
		id: InvVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.04, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempInventory = app.root.ChangeVal(button=self, orig=app.root.character.Inventory, temp=app.root.character.tempInventory)
	Button:
		id: Mine
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempMineral = app.root.ChangeVal(button=Mine, orig=app.root.character.Mineral, temp=app.root.character.tempMineral)
	Button:
		id: Psy
		name: "Psy"
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempPsyche = app.root.ChangeVal(button=Psy, orig=app.root.character.Psyche, temp=app.root.character.tempPsyche)
	Button:
		id: MasVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempMastery = app.root.ChangeVal(button=self, orig=app.root.character.Mastery, temp=app.root.character.tempMastery)
	Button:
		id: Voi
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempVoid = app.root.ChangeVal(button=Voi, orig=app.root.character.Void, temp=app.root.character.tempVoid)
	Button:
		id: Mind
		name: "Mind"
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempMind = app.root.ChangeVal(button=Mind, orig=app.root.character.Mind, temp=app.root.character.tempMind)
	Button:
		id: IntVal
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempIntellect = app.root.ChangeVal(button=self, orig=app.root.character.Intellect, temp=app.root.character.tempIntellect)
	Button:
		id: Liq
		text: "0"
		color: 0, 0, 0, 1
		font_size: 25
		size_hint: (.027, .05)
		text_size: self.size
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.character.tempLiquid = app.root.ChangeVal(button=Liq, orig=app.root.character.Liquid, temp=app.root.character.tempLiquid)
	Button:
		id: insInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("INS")
	Button:
		id: tecInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("TEC")
	Button:
		id: forInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("FOR")
	Button:
		id: vitInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("VIT")
	Button:
		id: psyInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("PSY")
	Button:
		id: minInfo
		size_hint: (.085, .05)
		background_color: (0, 0, 0, 0)
		on_release:
			app.root.Info("MIN")
	Button:
		id: draw
		text: "Deck"
		pos_hint: {"x": .9, "y": .46}
		size_hint: .1, .1
		font_size: 30
		on_release: 
			app.root.DrawCardPopup()
	Button:
		id: discard
		text: "Discard"
		pos_hint: {"x": .76, "y": .46}
		size_hint: .14, .1
		font_size: 30
		disabled: True
		on_release: 
			app.root.DiscardPopup()
	Label:
		id: deckLab
		text: "Stamina:"
		pos_hint: {"x": .545, "y": .49}
		size_hint: .14, .1
		font_size: 25
	Label:
		id: deckVal
		text: "30"
		pos_hint: {"x": .63, "y": .49}
		size_hint: .14, .1
		font_size: 25
	Label:
		id: discLab
		text: "Discard:"
		pos_hint: {"x": .55, "y": .43}
		size_hint: .14, .1
		font_size: 25
	Label:
		id: discVal
		text: "0"
		pos_hint: {"x": .63, "y": .43}
		size_hint: .14, .1
		font_size: 25
	Button:
		id: save
		text: "Save"
		size_hint: .15, .1
		pos_hint: {"center_x": .1, "center_y": .3}
		on_release: 
			app.root.path = open(app.root.path.name, "w")
			app.root.SaveData(app.root.character)
	Button:
		id: reset
		text: "Reset"
		size_hint: .15, .1
		pos_hint: {"center_x": .1, "center_y": .19}
		on_release: 
			app.root.ResetPopup(app.root.character)
	Button:
		id: charge
		text: "Charge"
		size_hint: .15, .1
		pos_hint: {"center_x": .26, "center_y": .19}
		on_release: 
			app.root.ChargePopup(app.root.character)
	Button:
		id: negotiations
		text: "Negotiations"
		size_hint: .15, .1
		pos_hint: {"center_x": .26, "center_y": .08}
		on_release: 
			app.root.Info("NEG")
	Button:
		id: cellOne
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .55, "center_y": .95}
	Button:
		id: cellTwo
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .7, "center_y": .95}
	Button:
		id: cellThree
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .85, "center_y": .95}
	Button:
		id: cellFour
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .55, "center_y": .85}
	Button:
		id: cellFive
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .7, "center_y": .85}
	Button:
		id: cellSix
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .85, "center_y": .85}
	Button:
		id: cellSeven
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .55, "center_y": .75}
	Button:
		id: cellEight
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .7, "center_y": .75}
	Button:
		id: cellNine
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .85, "center_y": .75}
	Button:
		id: cellTen
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .55, "center_y": .65}
	Button:
		id: cellEleven
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .7, "center_y": .65}
	Button:
		id: cellTwelve
		name: "0"
		text: "EMPTY"
		size_hint: .15, .1
		pos_hint: {"x": .85, "center_y": .65}
	FloatLayout:
		id: fL
		pos: (280, 0)
		size_hint: (.46, .05)
		
<BoosterScreen>
	Label: 
		pos_hint: {"center_x": .5, "center_y": .95}
		text: "Booster Pack"
	Button:
		id: trade
		text: "Swap"
		size_hint: .15, .1
		pos_hint: {"center_x": .5, "center_y": .08}
		on_release: 
			app.root.Swap()
	FloatLayout:
		id: fL
		size_hint: (.46, .05)